{
	"auto-close-tag.excludedTags": ["T", "t", "br", "any"],
  "auto-close-tag.SublimeText3Mode": true,
  "auto-close-tag.insertSpaceBeforeSelfClosingTag": true,
  "better-comments.tags": [
		{
			"tag": "!",
      "color": "#FF2D00",
      "strikethrough": false,
      "underline": false,
      "backgroundColor": "transparent",
      "bold": false,
      "italic": false
    },
    {
			"tag": "?",
      "color": "#3498DB",
      "strikethrough": false,
      "underline": false,
      "backgroundColor": "transparent",
      "bold": false,
      "italic": false
    },
    {
			"tag": "//",
      "color": "#474747",
      "strikethrough": true,
      "underline": false,
      "backgroundColor": "transparent",
      "bold": false,
      "italic": false
    },
    {
			"tag": "todo",
      "color": "#ffc600",
      "strikethrough": false,
      "underline": false,
      "backgroundColor": "transparent",
      "bold": false,
      "italic": false
    },
    {
			"tag": "*",
      "color": "#98C379",
      "strikethrough": false,
      "underline": false,
      "backgroundColor": "transparent",
      "bold": false,
      "italic": false
    },
    {
			"tag": "Method",
      "color": "#193549",
      "strikethrough": false,
      "underline": true,
      "backgroundColor": "#ffc600",
      "bold": true,
      "italic": true
    },
    {
			"tag": "Solution",
      "color": "#ffc600",
      "strikethrough": false,
      "underline": true,
      "backgroundColor": "Transparent",
      "bold": false,
      "italic": true
    },
    {
			"tag": "·",
      "color": "#ffffffC7",
      "strikethrough": false,
      "underline": false,
      "backgroundColor": "Transparent",
      "bold": false,
      "italic": false
    }
  ],
  "bladeFormatter.format.indentSize": 2,
	"breadcrumbs.enabled": false,
  "cSpell.customDictionaries": {
		"word-up": {
			"name": "victor",
      "path": "~/.config/cspell/victor-words.txt",
      "scope": "user",
      "addWords": true
    }
  },
  "cSpell.allowCompoundWords": true,
  "cSpell.diagnosticLevel": "Hint",
  "cSpell.enableFiletypes": ["mdx"],
  "cSpell.language": "en,en-US",
  "cSpell.userWords": ["hotpink"],
  "css.lint.hexColorLength": "ignore",
  "css.validate": false,
  // "cssvar.extensions": ["css", "jsx", "tsx"],
  // "cssvar.files": ["./node_modules/open-props/open-props.min.css", "assets/styles/variables.css", "styles/variables.css", "src/styles/variables.css"],
  "debug.onTaskErrors": "debugAnyway",
  "diffEditor.codeLens": true,
  // "dotnet.help.firstView": "gettingStarted",
  "editor.acceptSuggestionOnEnter": "smart",
  "editor.accessibilitySupport": "off",
  "editor.bracketPairColorization.enabled": true,
  "editor.autoClosingBrackets": "never",
  "editor.autoIndent": "full",
  "editor.codeActionsOnSave": {
		"source.fixAll": "never",
		"source.fixAll.eslint": "explicit",
		"source.organizeImports": "never"
	},
  "editor.colorDecorators": false,
  "editor.copyWithSyntaxHighlighting": false,
  "editor.cursorBlinking": "solid",
  "editor.cursorSmoothCaretAnimation": "on",
  "editor.cursorStyle": "line",
  "editor.cursorWidth": 4,
  "editor.defaultFormatter": "esbenp.prettier-vscode",
  "editor.detectIndentation": false,
  "editor.dragAndDrop": false,
  "editor.find.addExtraSpaceOnTop": false,
  "editor.find.seedSearchStringFromSelection": "selection",
  "editor.foldingImportsByDefault": false,
  "editor.fontFamily": "'Monaspace Argon', Input Mono, Fira Code, Menlo, Monaco, Courier New, monospace",
  // "editor.fontLigatures": "'ss01', 'ss02', 'ss03', 'ss06', 'zero'",
	// "editor.fontLigatures": "'calt', 'liga', 'dlig', 'ss01', 'ss02'",
  "editor.fontLigatures": true,
  "editor.fontSize": 20,
  "editor.fontWeight": "400",
  "editor.formatOnPaste": true,
  "editor.formatOnSave": true,
  "editor.formatOnSaveMode": "modificationsIfAvailable",
  "editor.formatOnType": true,
  "editor.guides.bracketPairs": "active",
  "editor.hover.sticky": true,
  "editor.inlayHints.enabled": "offUnlessPressed",
  // "editor.inlineSuggest.enabled": false,
	"editor.inlineSuggest.enabled": true,
  "editor.letterSpacing": 0.5,
  "editor.lineHeight": 0,
  // "editor.lineNumbers": "on",
  "editor.lineNumbers": "interval",
  "editor.linkedEditing": true,
  "editor.matchBrackets": "always",
  "editor.minimap.enabled": false,
  "editor.minimap.scale": 3,
  "editor.minimap.showSlider": "always",
  "editor.multiCursorModifier": "ctrlCmd",
  "editor.parameterHints.enabled": false,
  "editor.quickSuggestionsDelay": 30,
  "editor.renderControlCharacters": true,
  "editor.renderWhitespace": "all",
  // "editor.renderWhitespace": "boundary",
  "editor.rulers": [80, 100],
  "editor.scrollBeyondLastLine": true,
  "editor.showFoldingControls": "always",
  "editor.snippetSuggestions": "inline",
  "editor.stickyScroll.enabled": true,
  "editor.suggest.preview": true,
  "editor.suggest.shareSuggestSelections": true,
  "editor.suggest.showStatusBar": true,
  "editor.suggestFontSize": 20,
  "editor.suggestLineHeight": 30,
  "editor.suggestSelection": "first",
  //  "editor.suggestSelection": "recentlyUsedByPrefix",
  "editor.tabCompletion": "on",
  "editor.tabSize": 2,
  "editor.unicodeHighlight.allowedCharacters": {
    "’": true
  },
  "editor.unicodeHighlight.invisibleCharacters": false,
  "editor.useTabStops": false,
  "editor.wordSeparators": "`~!@#%^&*()=+[{]}\\|;:'\",.<>/?",
  "editor.wordWrap": "on",

  "emmet.includeLanguages": {
    "javascript": "javascriptreact",
    "plaintext": "pug",
    "razor": "html",
    "twig": "html"
  },
  "emmet.showExpandedAbbreviation": "inMarkupAndStylesheetFilesOnly",
	"emmet.showSuggestionsAsSnippets": true,
  "emmet.triggerExpansionOnTab": false,
	"errorLens.enabledDiagnosticLevels": [
    "warning",
    "error"
  ],
  "errorLens.excludeBySource": [
    "cSpell",
    "Grammarly",
    "eslint"
  ],
	// "errorLens.fontSize": "12",
  // "errorLens.fontFamily": "Comic Sans MS",
  // "errorLens.onSave": true,
  // "errorLens.exclude": ["never (read|used)", "Unknown word"],
  "eslint.codeAction.showDocumentation": {
    "enable": true
  },
  "eslint.quiet": true,
  "eslint.validate": ["javascript", "typescript", "javascriptreact", "typescriptreact", "vue", "html", "njk", "yaml", "markdown", "json", "jsonc", "json5"],

  "explorer.confirmDelete": false,
  "explorer.fileNesting.enabled": true,
  "explorer.fileNesting.expand": false,
  "explorer.fileNesting.patterns": {
    "//": "Last update at 4/19/2024, 3:25:52 PM",
    "*.asax": "$(capture).*.cs, $(capture).*.vb",
    "*.ascx": "$(capture).*.cs, $(capture).*.vb",
    "*.ashx": "$(capture).*.cs, $(capture).*.vb",
    "*.aspx": "$(capture).*.cs, $(capture).*.vb",
    "*.axaml": "$(capture).axaml.cs",
    "*.bloc.dart": "$(capture).event.dart, $(capture).state.dart",
    "*.c": "$(capture).h",
    "*.cc": "$(capture).hpp, $(capture).h, $(capture).hxx, $(capture).hh",
    "*.cjs": "$(capture).cjs.map, $(capture).*.cjs, $(capture)_*.cjs",
    "*.component.ts": "$(capture).component.html, $(capture).component.spec.ts, $(capture).component.css, $(capture).component.scss, $(capture).component.sass, $(capture).component.less",
    "*.cpp": "$(capture).hpp, $(capture).h, $(capture).hxx, $(capture).hh",
    "*.cs": "$(capture).*.cs",
    "*.cshtml": "$(capture).cshtml.cs",
    "*.csproj": "*.config, *proj.user, appsettings.*, bundleconfig.json",
    "*.css": "$(capture).css.map, $(capture).*.css",
    "*.cxx": "$(capture).hpp, $(capture).h, $(capture).hxx, $(capture).hh",
    "*.dart": "$(capture).freezed.dart, $(capture).g.dart",
    "*.ex": "$(capture).html.eex, $(capture).html.heex, $(capture).html.leex",
    "*.fs": "$(capture).fs.js, $(capture).fs.js.map, $(capture).fs.jsx, $(capture).fs.ts, $(capture).fs.tsx, $(capture).fs.rs, $(capture).fs.php, $(capture).fs.dart",
    "*.go": "$(capture)_test.go",
    "*.java": "$(capture).class",
    "*.js": "$(capture).js.map, $(capture).*.js, $(capture)_*.js",
    "*.jsx": "$(capture).js, $(capture).*.jsx, $(capture)_*.js, $(capture)_*.jsx, $(capture).less, $(capture).module.less",
    "*.master": "$(capture).*.cs, $(capture).*.vb",
    "*.mjs": "$(capture).mjs.map, $(capture).*.mjs, $(capture)_*.mjs",
    "*.module.ts": "$(capture).resolver.ts, $(capture).controller.ts, $(capture).service.ts",
    "*.mts": "$(capture).mts.map, $(capture).*.mts, $(capture)_*.mts",
    "*.pubxml": "$(capture).pubxml.user",
    "*.razor": "$(capture).razor.cs, $(capture).razor.css, $(capture).razor.scss",
    "*.resx": "$(capture).*.resx, $(capture).designer.cs, $(capture).designer.vb",
    "*.tex": "$(capture).acn, $(capture).acr, $(capture).alg, $(capture).aux, $(capture).bbl, $(capture).blg, $(capture).fdb_latexmk, $(capture).fls, $(capture).glg, $(capture).glo, $(capture).gls, $(capture).idx, $(capture).ind, $(capture).ist, $(capture).lof, $(capture).log, $(capture).lot, $(capture).out, $(capture).pdf, $(capture).synctex.gz, $(capture).toc, $(capture).xdv",
    "*.ts": "$(capture).js, $(capture).d.ts.map, $(capture).*.ts, $(capture)_*.js, $(capture)_*.ts",
    "*.tsx": "$(capture).ts, $(capture).*.tsx, $(capture)_*.ts, $(capture)_*.tsx, $(capture).less, $(capture).module.less, $(capture).scss, $(capture).module.scss",
    "*.vbproj": "*.config, *proj.user, appsettings.*, bundleconfig.json",
    "*.vue": "$(capture).*.ts, $(capture).*.js, $(capture).story.vue",
    "*.xaml": "$(capture).xaml.cs",
    "+layout.svelte": "+layout.ts,+layout.ts,+layout.js,+layout.server.ts,+layout.server.js,+layout.gql",
    "+page.svelte": "+page.server.ts,+page.server.js,+page.ts,+page.js,+page.gql",
    ".clang-tidy": ".clang-format, .clangd, compile_commands.json",
    ".env": "*.env, .env.*, .envrc, env.d.ts",
    ".gitignore": ".gitattributes, .gitmodules, .gitmessage, .mailmap, .git-blame*",
    ".project": ".classpath",
    "BUILD.bazel": "*.bzl, *.bazel, *.bazelrc, bazel.rc, .bazelignore, .bazelproject, WORKSPACE",
    "CMakeLists.txt": "*.cmake, *.cmake.in, .cmake-format.yaml, CMakePresets.json, CMakeCache.txt",
    "Cargo.toml": ".clippy.toml, .rustfmt.toml, cargo.lock, clippy.toml, cross.toml, rust-toolchain.toml, rustfmt.toml",
    "Dockerfile": "*.dockerfile, .devcontainer.*, .dockerignore, compose.*, docker-compose.*, dockerfile*",
    "I*.cs": "$(capture).cs",
    "Makefile": "*.mk",
    "Pipfile": ".editorconfig, .flake8, .isort.cfg, .python-version, Pipfile, Pipfile.lock, requirements*.in, requirements*.pip, requirements*.txt, tox.ini",
    "README*": "AUTHORS, Authors, BACKERS*, Backers*, CHANGELOG*, CITATION*, CODEOWNERS, CODE_OF_CONDUCT*, CONTRIBUTING*, CONTRIBUTORS, COPYING*, CREDITS, Changelog*, Citation*, Code_Of_Conduct*, Codeowners, Contributing*, Contributors, Copying*, Credits, GOVERNANCE.MD, Governance.md, HISTORY.MD, History.md, LICENSE*, License*, MAINTAINERS, Maintainers, README*, Readme*, SECURITY.MD, SPONSORS*, Security.md, Sponsors*, authors, backers*, changelog*, citation*, code_of_conduct*, codeowners, contributing*, contributors, copying*, credits, governance.md, history.md, license*, maintainers, readme*, security.md, sponsors*",
    "Readme*": "AUTHORS, Authors, BACKERS*, Backers*, CHANGELOG*, CITATION*, CODEOWNERS, CODE_OF_CONDUCT*, CONTRIBUTING*, CONTRIBUTORS, COPYING*, CREDITS, Changelog*, Citation*, Code_Of_Conduct*, Codeowners, Contributing*, Contributors, Copying*, Credits, GOVERNANCE.MD, Governance.md, HISTORY.MD, History.md, LICENSE*, License*, MAINTAINERS, Maintainers, README*, Readme*, SECURITY.MD, SPONSORS*, Security.md, Sponsors*, authors, backers*, changelog*, citation*, code_of_conduct*, codeowners, contributing*, contributors, copying*, credits, governance.md, history.md, license*, maintainers, readme*, security.md, sponsors*",
    "artisan": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, server.php, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, webpack.mix.js, windi.config.*",
    "astro.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "composer.json": ".php*.cache, composer.lock, phpunit.xml*, psalm*.xml",
    "default.nix": "shell.nix",
    "deno.json*": "*.env, .env.*, .envrc, api-extractor.json, deno.lock, env.d.ts, import-map.json, import_map.json, jsconfig.*, tsconfig.*, tsdoc.*",
    "flake.nix": "flake.lock",
    "gatsby-config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, gatsby-browser.*, gatsby-node.*, gatsby-ssr.*, gatsby-transformer.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "gemfile": ".ruby-version, gemfile.lock",
    "go.mod": ".air*, go.sum",
    "go.work": "go.work.sum",
    "hatch.toml": ".editorconfig, .flake8, .isort.cfg, .python-version, hatch.toml, requirements*.in, requirements*.pip, requirements*.txt, tox.ini",
    "mix.exs": ".credo.exs, .dialyzer_ignore.exs, .formatter.exs, .iex.exs, .tool-versions, mix.lock",
    "next.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, next-env.d.ts, next-i18next.config.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "nuxt.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .nuxtignore, .nuxtrc, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "package.json": ".browserslist*, .circleci*, .commitlint*, .cz-config.js, .czrc, .dlint.json, .dprint.json*, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitmojirc.json, .gitpod*, .huskyrc*, .jslint*, .knip.*, .lintstagedrc*, .markdownlint*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .prettier*, .pylintrc, .release-please*.json, .releaserc*, .ruff.toml, .sentry*, .simple-git-hooks*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .versionrc*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, Procfile, apollo.config.*, appveyor*, azure-pipelines*, biome.json, bower.json, build.config.*, bun.lockb, commitlint*, crowdin*, dangerfile*, dlint.json, dprint.json*, electron-builder.*, eslint*, firebase.json, grunt*, gulp*, jenkins*, knip.*, lerna*, lint-staged*, nest-cli.*, netlify*, nodemon*, npm-shrinkwrap.json, nx.*, package-lock.json, package.nls*.json, phpcs.xml, pm2.*, pnpm*, prettier*, pullapprove*, pyrightconfig.json, release-please*.json, release-tasks.sh, release.config.*, renovate*, rollup.config.*, rspack*, ruff.toml, simple-git-hooks*, sonar-project.properties, stylelint*, tslint*, tsup.config.*, turbo*, typedoc*, unlighthouse*, vercel*, vetur.config.*, webpack*, workspace.json, xo.config.*, yarn*",
    "pubspec.yaml": ".metadata, .packages, all_lint_rules.yaml, analysis_options.yaml, build.yaml, pubspec.lock, pubspec_overrides.yaml",
    "pyproject.toml": ".commitlint*, .dlint.json, .dprint.json*, .editorconfig, .eslint*, .flake8, .flowconfig, .isort.cfg, .jslint*, .lintstagedrc*, .markdownlint*, .pdm-python, .pdm.toml, .prettier*, .pylintrc, .python-version, .ruff.toml, .stylelint*, .textlint*, .xo-config*, .yamllint*, MANIFEST.in, Pipfile, Pipfile.lock, biome.json, commitlint*, dangerfile*, dlint.json, dprint.json*, eslint*, hatch.toml, lint-staged*, pdm.lock, phpcs.xml, poetry.lock, prettier*, pyproject.toml, pyrightconfig.json, requirements*.in, requirements*.pip, requirements*.txt, ruff.toml, setup.cfg, setup.py, stylelint*, tox.ini, tslint*, xo.config.*",
    "quasar.conf.js": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, quasar.extensions.json, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "readme*": "AUTHORS, Authors, BACKERS*, Backers*, CHANGELOG*, CITATION*, CODEOWNERS, CODE_OF_CONDUCT*, CONTRIBUTING*, CONTRIBUTORS, COPYING*, CREDITS, Changelog*, Citation*, Code_Of_Conduct*, Codeowners, Contributing*, Contributors, Copying*, Credits, GOVERNANCE.MD, Governance.md, HISTORY.MD, History.md, LICENSE*, License*, MAINTAINERS, Maintainers, README*, Readme*, SECURITY.MD, SPONSORS*, Security.md, Sponsors*, authors, backers*, changelog*, citation*, code_of_conduct*, codeowners, contributing*, contributors, copying*, credits, governance.md, history.md, license*, maintainers, readme*, security.md, sponsors*",
    "remix.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, remix.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "requirements.txt": ".editorconfig, .flake8, .isort.cfg, .python-version, requirements*.in, requirements*.pip, requirements*.txt, tox.ini",
    "rush.json": ".browserslist*, .circleci*, .commitlint*, .cz-config.js, .czrc, .dlint.json, .dprint.json*, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitmojirc.json, .gitpod*, .huskyrc*, .jslint*, .knip.*, .lintstagedrc*, .markdownlint*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .prettier*, .pylintrc, .release-please*.json, .releaserc*, .ruff.toml, .sentry*, .simple-git-hooks*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .versionrc*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, Procfile, apollo.config.*, appveyor*, azure-pipelines*, biome.json, bower.json, build.config.*, bun.lockb, commitlint*, crowdin*, dangerfile*, dlint.json, dprint.json*, electron-builder.*, eslint*, firebase.json, grunt*, gulp*, jenkins*, knip.*, lerna*, lint-staged*, nest-cli.*, netlify*, nodemon*, npm-shrinkwrap.json, nx.*, package-lock.json, package.nls*.json, phpcs.xml, pm2.*, pnpm*, prettier*, pullapprove*, pyrightconfig.json, release-please*.json, release-tasks.sh, release.config.*, renovate*, rollup.config.*, rspack*, ruff.toml, simple-git-hooks*, sonar-project.properties, stylelint*, tslint*, tsup.config.*, turbo*, typedoc*, unlighthouse*, vercel*, vetur.config.*, webpack*, workspace.json, xo.config.*, yarn*",
    "setup.cfg": ".editorconfig, .flake8, .isort.cfg, .python-version, MANIFEST.in, requirements*.in, requirements*.pip, requirements*.txt, setup.cfg, tox.ini",
    "setup.py": ".editorconfig, .flake8, .isort.cfg, .python-version, MANIFEST.in, requirements*.in, requirements*.pip, requirements*.txt, setup.cfg, setup.py, tox.ini",
    "shims.d.ts": "*.d.ts",
    "svelte.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, houdini.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, mdsvex.config.js, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vite.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "vite.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",
    "vue.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*"
  },
  "explorer.openEditors.sortOrder": "alphabetical",
  "explorer.openEditors.visible": 1,
  "explorer.sortOrder": "foldersNestsFiles",
  "explorer.sortOrderLexicographicOptions": "upper",
  "extensions.autoUpdate": "onlyEnabledExtensions",
  "extensions.confirmedUriHandlerExtensionIds": ["ms-dotnettools.dotnet-interactive-vscode"],
  "extensions.ignoreRecommendations": false,
  "files.associations": {
    "*.html": "html"
  },
  "files.autoSave": "afterDelay",
  "files.autoSaveDelay": 4000,
  "files.defaultLanguage": "${activeEditorLanguage}",
  "files.eol": "\n",
  "files.exclude": {
    "somefolder/": true,
    "somefile": true,
    "**/.cache": true,
    "**/.DS_Store": true,
    "**/.git": true,
    "**/.hg": true,
    "**/.next": true,
    "**/.svn": true,
    "**/CVS": true,
    "**/dist": false
  },
  "files.insertFinalNewline": true,
  "files.simpleDialog.enable": true,
  "files.trimFinalNewlines": true,
  "files.trimTrailingWhitespace": true,
  "git.autofetch": true,
  "git.confirmSync": false,
  "git.enableSmartCommit": true,
  "git.untrackedChanges": "separate",
  "git.mergeEditor": false,
  "github.copilot.enable": {
    "*": true,
    "markdown": false,
    "plaintext": false,
    "yaml": false,
    "csharp": true,
    "jsonc": true
  },
  "githubIssues.workingIssueFormatScm": "#${issueNumberLabel}",
  "githubPullRequests.fileListLayout": "tree",
  "githubPullRequests.pullBranch": "never",
  "gitlens.codeLens.authors.enabled": false,
  "gitlens.codeLens.enabled": false,
  "gitlens.codeLens.recentChange.enabled": false,
  "gitlens.menus": {
    "editor": {
      "blame": false,
      "clipboard": true,
      "compare": true,
      "history": false,
      "remote": false
    },
    "editorGroup": {
      "blame": true,
      "compare": false
    },
    "editorTab": {
      "clipboard": true,
      "compare": true,
      "history": true,
      "remote": true
    },
    "explorer": {
      "clipboard": true,
      "compare": true,
      "history": true,
      "remote": true
    },
    "scm": {
      "authors": true
    },
    "scmGroup": {
      "compare": true,
      "openClose": true,
      "stash": true
    },
    "scmGroupInline": {
      "stash": true
    },
    "scmItem": {
      "clipboard": true,
      "compare": true,
      "history": true,
      "remote": false,
      "stash": true
    }
  },
  "html.autoClosingTags": false,
  "html.format.enable": true,
  "html.format.preserveNewLines": true,
  // "javascript.preferences.quoteStyle": "single",
	// "javascript.updateImportsOnFileMove.enabled": "always",
  // "javascript.inlayHints.enumMemberValues.enabled": false,
  // "javascript.inlayHints.functionLikeReturnTypes.enabled": false,
  // "javascript.inlayHints.parameterNames.enabled": "all",
  // "javascript.inlayHints.parameterTypes.enabled": false,
  // "javascript.inlayHints.propertyDeclarationTypes.enabled": false,
  // "javascript.inlayHints.variableTypes.enabled": false,
  "json.schemas": [
    {
      "fileMatch": ["/bower.json"],
      "url": "https://json.schemastore.org/bower"
    },
    {
      "fileMatch": ["/foo.json"],
      "url": "./myschema.json"
    },
    {
      "fileMatch": ["/.myconfig"],
      "schema": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the entry"
          }
        }
      }
    }
  ],
  "i18n-ally.autoDetection": false,
  "i18n-ally.displayLanguage": "en",
  "i18n-ally.ignoredLocales": [],
  "iconify.annotations": true,
  "iconify.inplace": true,
  "less.validate": false,
  "liveServer.settings.donotShowInfoMsg": true,
  "markdown.extension.italic.indicator": "_",
  "npm.packageManager": "pnpm",
  "omnisharp.useModernNet": true,
  "polacode.shadow": "rgba(0, 0, 0, 0.55) 0px 0 0",
  "polacode.transparentBackground": true,
  "polacode.target": "snippet",
  "playwright.reuseBrowser": false,
  "prettier.enable": false,
  "prettier.semi": false,
  "prettier.singleQuote": true,
  "quokka.automaticRestart": true,
  "quokka.automaticStartRegex": "scratch(pad)?\\.(ts|js|tsx|jsx)$",
  // "quokka.startViewStatusBar": false,
  "rapidapi.terminalLink.enabled": false,
  "scm.diffDecorationsGutterWidth": 2,
  // "screencastMode.onlyKeyboardShortcuts": true,
  "scss.validate": false,
  "search.mode": "reuseEditor",
  "search.searchEditor.doubleClickBehaviour": "openLocationToSide",
  "search.useIgnoreFiles": false,
  "search.exclude": {
    "**/vendor/{[^l],?[^ai]}*": true,
    "**/public/{[^i],?[^n]}*": true,
    "**/node_modules": true,
    "**/.nuxt": true,
    "**/.svelte-kit": true,
    "**/dist": true,
    "**/_ide_helper.php": true,
    "**/composer.lock": true,
    "**/package-lock.json": true,
    "storage": true,
    ".phpunit.result.cache": true,
    "**/.git": true,
    "**/.github": true,
    "**/.output": true,
    "**/.pnpm": true,
    "**/.vscode": true,
    "**/.yarn": true,
    "**/bower_components": true,
    "**/dist/**": true,
    "**/logs": true,
    "**/out/**": true,
    "**/pnpm-lock.yaml": true,
    "**/tmp": true,
    "**/yarn.lock": true
  },
  "slidev.enabled": true,
  "stylelint.packageManager": "pnpm",
  "svelte.ask-to-enable-ts-plugin": true,
  "svelte.enable-ts-plugin": true,
  // "svelte.plugin.svelte.note-new-transformation": false,
  "svg.preview.mode": "svg",
  "tailwindCSS.emmetCompletions": true,
  "terminal.integrated.cursorBlinking": true,
  "terminal.integrated.cursorStyle": "line",
  "terminal.integrated.fontFamily": "'MonaspiceAr Nerd Font', 'CaskaydiaCove Nerd Font', monospace",
  "terminal.integrated.fontSize": 14,
  "terminal.integrated.fontWeight": "300",
  "terminal.integrated.lineHeight": 1.5,
  "terminal.integrated.persistentSessionReviveProcess": "never",
  "terminal.integrated.tabs.enabled": true,
  "todo.symbols.box": "[ ]", // Box symbol
  "todo.symbols.done": "[+]", // Done symbol
  "todo.symbols.cancelled": "[-]", // Cancelled symbol
  "totalTypeScript.hideAllTips": false,
  "totalTypeScript.hideBasicTips": false,
  "totalTypeScript.hiddenTips": [
		"array-type",
		"typing-function-parameters",
		"function-return-type",
		"basic-types",
		"union-type",
		"undefined-keyword",
		"variable-type-annotation",
		"literal-type",
		"type-alias-declaration",
		"passing-generics-to-types",
		"typeof",
		"interface-declaration",
		"any-type",
		"ts-object-type",
		"as-assertion",
		"optional-object-property",
		"keyof",
		"never-keyword",
		"non-null-expression",
		"record-utility-type",
		"in-operator-narrowing"
	],
  // "typescript.preferences.quoteStyle": "single",
  // "typescript.tsserver.log": "off",
	// "typescript.updateImportsOnFileMove.enabled": "always",
  // "typescript.inlayHints.enumMemberValues.enabled": false,
  // "typescript.inlayHints.functionLikeReturnTypes.enabled": false,
  // "typescript.inlayHints.parameterNames.enabled": "all",
  // "typescript.inlayHints.parameterTypes.enabled": false,
  // "typescript.inlayHints.propertyDeclarationTypes.enabled": false,
  // "typescript.inlayHints.variableTypes.enabled": false,
  "vsicons.dontShowNewVersionMessage": true,
  "vsicons.presets.hideExplorerArrows": true,
  "vite.buildCommand": "pnpm build",
  "vite.devCommand": "pnpm dev",
  // "volar.autoCompleteRefs": false,
  // "volar.completion.preferredTagNameCase": "pascal",
  "where-am-i.colorful": false,

  "window.autoDetectColorScheme": true,
  "window.closeWhenEmpty": true,
  "window.dialogStyle": "custom",
  "window.nativeFullScreen": false,
  // "window.nativeTabs": true, // this is great, macOS only
  // "window.newWindowDimensions": "inherit",
  "window.openFilesInNewWindow": "off",
  "window.title": "${dirty} ${activeEditorMedium}${separator}${rootName}",
  // "window.title": "${activeEditorShort}${separator}${activeFolderShort}${separator}${rootName}",
  "window.titleBarStyle": "native",

  "workbench.colorCustomizations": {
    "errorLens.hintForeground": "#ffc600A1",
    "errorLens.hintBackground": "#ffc60003",
    "errorLens.errorBackground": "#ff000005"
	},
  "workbench.editor.closeOnFileDelete": true,
  "workbench.editor.enablePreview": true,
  "workbench.editor.enablePreviewFromCodeNavigation": true,
  "workbench.editor.enablePreviewFromQuickOpen": true,
  "workbench.editor.highlightModifiedTabs": true,
  "workbench.editor.limit.enabled": true,
  "workbench.editor.limit.perEditorGroup": true,
  "workbench.editor.limit.value": 2,
  "workbench.editor.splitInGroupLayout": "vertical",
  "workbench.editor.tabCloseButton": "left",
	"workbench.editor.tabSizing": "shrink",
	"workbench.fontAliasing": "antialiased",
  "workbench.list.openMode": "singleClick",
  "workbench.list.smoothScrolling": true,
  // "workbench.panel.opensMaximized": "always",
  "workbench.preferredDarkColorTheme": "Vitesse Dark",
	"workbench.preferredLightColorTheme": "Vitesse Light",
  "workbench.settings.editor": "json",
	"workbench.settings.openDefaultKeybindings": true,
  "workbench.tree.expandMode": "singleClick",
  "workbench.tree.indent": 20,
  "workbench.view.alwaysShowHeaderActions": true,
  // "workbench.welcomePage.experimental.videoTutorials": "on",
  "xstate.nestTypegenFiles": false,
  "[csharp]": {
    "editor.formatOnSave": false
  },
  "[html]": {
    "editor.defaultFormatter": "vscode.html-language-features"
  },
  "[javascript]": {
    "editor.defaultFormatter": "Vue.volar"
  },
  "[json]": {
    "editor.defaultFormatter": "vscode.json-language-features"
  },
  "[markdown]": {
    "editor.defaultFormatter": "yzhang.markdown-all-in-one",
    "editor.formatOnSave": true
  },
  "[sql]": {
    "editor.defaultFormatter": "adpyke.vscode-sql-formatter"
  },
  "[svelte]": {
    "editor.defaultFormatter": "svelte.svelte-vscode",
    "editor.formatOnSave": true,
    "editor.formatOnPaste": true,
    "editor.formatOnType": true
  },
  "[typescript]": {
    "editor.defaultFormatter": "Vue.volar"
  },
  "[vue]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": false,
    "editor.codeActionsOnSave": {
			"source.fixAll.eslint": "explicit"
		}
  },
  "[xml]": {
    "editor.defaultFormatter": "DotJoshJohnson.xml"
  },
	"security.workspace.trust.untrustedFiles": "open",
	"git.openRepositoryInParentFolders": "never",
	"workbench.startupEditor": "readme",
  "workbench.sideBar.location": "right",
	"terminal.integrated.env.osx": {
    "FIG_NEW_SESSION": "1",
    "CW_NEW_SESSION": "1"
  },
	"workbench.editor.empty.hint": "hidden",
	"console-ninja.featureSet": "Community",
	"inlineChat.showGutterIcon":"always",
	"nxConsole.showNodeVersionOnStartup": false,
	"redhat.telemetry.enabled": true,
  "salesforcedx-vscode-apex.java.home": "/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home",
	"workbench.editor.tabActionLocation": "left",
  "window.zoomLevel": -1,
  "diffEditor.renderSideBySide": false,
  "aws.suppressPrompts": {
    "codeWhispererConnectionExpired": true
  },
  "diffEditor.ignoreTrimWhitespace": false,
  "[blade]": {
    "editor.defaultFormatter": "shufo.vscode-blade-formatter"
  },
  "rubyLsp.rubyExecutablePath": "/Users/victortolbert/.asdf/shims/ruby",
  "php.validate.executablePath": "/Users/victortolbert/Library/Application Support/Herd/bin//php"
}
